

Georgie and Clown

(define (domain GC) 

  (:requirements
    :strips                 
    :negative-preconditions 
  )

  (:predicates (person ?x) (position ?x) (at ?x ?y) (object ?x) (hold ?x ?y)
			   (possiblepos ?x ?y) (freePos ?x) (droppablePos ?x) (theresobj ?x ?y)
    
  )

 (:action go
   :parameters (?who ?from ?to)
   :precondition (and
   (person ?who)
   (position ?from)
   (position ?to)
   (at ?who ?from)
   (not(at ?who ?to))
   (possiblePos ?who ?to)
   (freePos ?to)
   (not(freePos ?from))
   )
   :effect(and
   (at ?who ?to)
   (not(at ?who ?from))
   (not(freePos ?to))
   (freePos ?from)
   )
  )
 (:action drop
   :parameters (?who ?what ?where)
   :precondition (and
   (person ?who)
   (object ?what)
   (position ?where)
   (at ?who ?where)
   (hold ?who ?what)
   (droppablePos ?where)
   )
   :effect(and
   (not(hold ?who ?what))
   (theresobj ?what ?where)
   )
  )
  (:action grab
   :parameters (?who ?what ?where)
   :precondition (and
   (person ?who)
   (object ?what)
   (position ?where)
   (at ?who ?where)
   (droppablePos ?where)
   (not(hold ?who ?what))
   (theresobj ?what ?where)
   )
   :effect(and
   (hold ?who ?what)
   (not(theresobj ?what ?where))
   )
  )
 ) 
 
 
 (define (problem GC)
 (:domain GC)
 (:objects georgie clown balloon boat 
		   p0 p1 p2 p3 p4 p5 p6)
 (:init (person georgie)(person clown)(object balloon)(object boat)
        (position p0) (position p1) (position p2) (position p3) (position p4) (position p5) (position p6)
		(at georgie p0)(at clown p6)(hold georgie boat)(hold clown balloon)
		(possiblepos georgie p0)(possiblepos georgie p3)(possiblepos georgie p1)
		(possiblepos clown p2)(possiblepos clown p4)(possiblepos clown p5)(possiblepos clown p6)(possiblepos clown p1)
		(freePos p1)(freePos p2)(freePos p3)(freePos p4)(freePos p5)
		(droppablePos p1)	
	)
 (:goal (and(at georgie p3)(hold georgie balloon)(at clown p5)(hold clown boat))
 )
  )
  
