PDDL
(define (domain G&C)

	(:requirements 
         :strips
         :negative-preconditions)
	(:predicates (persona ?x)(at ?x ?y)(Bo ?x)(Ba ?x)(Gzone ?x)(Czone ?x)(location ?x)(obj ?x))

	(:action goG 
	 :parameters (?from ?to)
	 :precondition (and(at G ?from)(location ?from)(location ?to)(Gzone ?to)(not at(C ?to))
	 :effects (and(at G ?to)(not(at G ?from))

	(:action goC
	 :parameters (?from ?to)
	 :precondition (and(at C ?from)(location ?from)(location ?to) (Czone ?to) (not at(G ?to))
	 :effect (and(at C ?to)(not(at C ?from))

	(:action Drop
	 :parameters (?obj ?persona ?where)
	 :precondition ((at ?persona ?where)(Location ?where)(hold ?persona ?obj)(obj ?obj)(persona ?persona)
	 :effect (and(not(hold ?persona ?obj)) (at ?obj ?where))

	(:action Grab
	 :parameters (?obj ?persona ?where)
	 :precondition ((at ?persona ?where)(at ?obj ?where)(location ?where) 
	 :effect (and(hold ?persona ?obj) (not (at ?obj ?where)))

------------------------------------------------------------------------------------
(define (problem G&C)
	(:domain G&C)
	(:objects locationP0 locationP1 locationP2 locationP3 locationP4 locationP5 
		  G C bo ba
	)

	(:init (at G locationP0) (at(C locationP6) (hold G bo) (hold G ba)
	       (Location LocationP0)(Location LocationP1)(Location LocationP2)
               (Location LocationP3)(Location LocationP4)(Location LocationP5)
               (Location LocationP6)
	       (Gzone locationP0) (Gzone locationP1) (Gzone locationP3)
	       (Czone locationP1) (Czone locationP2) (Czone locationP5) (Czone locationP6)
	       (obj ba) (obj bo) (persona G)(persona C)
	)

	(:goal (and(hold G ba)(hold C ba)(at G locationP3)(at C locationP5)))

____________________________________________________
(define (domain esame_1)



(:requirements

 :strips

 :negative-preconditions

 )





 (:predicates (persona ?x)(at ?x ?y)(hold ?x ?y)(Gzone ?x) (Czone ?x)(location ?x)(obj ?x))





 (:action goG



:parameters (?from ?to)



:precondition (and(at G ?from)(location ?from)(location ?to)(Gzone ?to)(not(at C ?to)))



:effect (and (at G ?to) (not(at G ?from)))



)





 (:action goC



:parameters (?from ?to)

:precondition (and(at C ?from)(location ?from)(location ?to)(Czone ?to)(not(at G ?to)))

:effect (and(at C ?to)(not(at C ?from)))

)

 (:action Drop

:parameters (?obj ?persona ?where)

:precondition (and(at ?persona ?where)(location ?where)(hold ?persona ?obj)(obj ?obj)(persona ?persona))

:effect ( and (not(hold ?persona ?obj)) (at ?obj ?where))


)

 (:action Collect

:parameters (?obj ?persona ?where)

:precondition (and(at ?persona ?where)(at ?obj ?where)(location ?where)(not(hold ?persona ?obj))(obj ?obj)(persona ?persona))

:effect (and (hold ?persona ?obj) (not (at ?obj ?where)))

)

 )
------------------------------------------------

(define (problem esame_1)

(:domain esame_1)

 (:objects locationP0 locationP1 locationP2 locationP3 locationP4 locationP5 locationP6

G C bo ba

)


 (:init (at G locationP0)(at C locationP6)(hold G bo)(hold C ba)


 (location locationP0) (location locationP1) (location locationP2) (location locationP3) (location locationP4) (location locationP5)

 (location locationP6)

(Gzone locationP0)(Gzone locationP1)(Gzone locationP3)



(Czone locationP1)(Czone locationP4)(Czone locationP2)(Czone locationP6)(Czone locationP5)



(obj ba)(obj bo)(persona G)(persona C)


 )

 (:goal (and (hold G ba)(hold C bo) (at G locationP3)(at C locationP5)))

 )

----------------------------------------------------------------------------------------------------

2) Describe the notion of HLA in HTN and provide examples, considering also the given problem