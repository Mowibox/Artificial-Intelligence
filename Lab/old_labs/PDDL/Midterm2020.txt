(define ( domain PARTY-domain)
	(:predicates (at ?x ?y)(agent ?x)(empty_cell ?x)(adjCell ?x ?y)
					   (one_cell ?x)(two_cell ?x)(pos ?x))
	(:action MOVE
	:parameters(?from ?to ?who)
	:precondition(and (at ?who ?from)(agent ?who)(pos ?from)
					   (pos ?to)(adjCell ?from ?to)(not(one_cell ?to))
		)
	:effect(and (not(at ?who ?from))(at ?who ?to)
		)
	)
	(:action SPLIT
	:parameters(?from ?to ?who)
	:precondition(and (at ?who ?from)(agent ?who)(pos ?from)
					   (pos ?to)(two_cell ?from)(empty_cell ?to)
					   (adjCell ?from ?to)
		)
	:effect(and(not(two_cell ?from))(one_cell ?from)(one_cell ?to)
			(not(empty_cell ?to))
		)
	)
)

(define (problem PARTY-problem)
	(:domain PARTY-domain)
	(:objects agent a00 a01 a02 a10 a11 a12 a20 a21 a22
	b00 b01 b02 b10 b11 b12 b20 b21 b22)
	(:init (agent agent)(at agent a21)(pos a00)(pos a01)(pos a02)
			(pos a10)(pos a11)(pos a12)(pos a20)(pos a21)(pos a22)
			(pos b00)(pos b01)(pos b02)(pos b10)(pos b11)(pos b12)
			(pos b20)(pos b21)(pos b22)
			(empty_cell a00)(empty_cell a10)(empty_cell a21)			(empty_cell a02)(empty_cell a12)(empty_cell a22)
			(empty_cell b00)(empty_cell b20)(empty_cell b01)
			(empty_cell b11)(empty_cell b21)(empty_cell b12)
			(one_cell a20)(one_cell a01)(one_cell b10)(one_cell b22)
			(two_cell a11)(two_cell b02)
			(adjCell a12 a22)(adjCell a22 a12)(adjCell a12 a02)			(adjCell a02 a12) (adjCell a12 a11)(adjCell a11 a12)			(adjCell a22 a21)(adjCell a21 a22)(adjCell a02 a01)			(adjCell a01 a02)(adjCell a11 a21) (adjCell a21 a11) 			(adjCell a11 a01) (adjCell a01 a11) (adjCell a11 a10) 			(adjCell a10 a11)(adjCell a21 a20) (adjCell a20 a21)			(adjCell a01 a00) (adjCell a00 a01)(adjCell a11 a20) 			(adjCell a20 a11)(adjCell a10 a00) (adjCell a00 a10)			(adjCell a10 a20)(adjCell a20 a10)(adjCell a00 b00) 			(adjCell b00 a00)(adjCell b12 b22) (adjCell b22 b12) 			(adjCell b12 b02) (adjCell b02 b12) (adjCell b12 b11) 			(adjCell b11 b12)(adjCell b22 b21) (adjCell b21 b22)			(adjCell b02 b01) (adjCell b01 b02)(adjCell b11 b21) 			(adjCell b21 b11) (adjCell b11 b01) (adjCell b01 b11) 			(adjCell b11 b10) (adjCell b10 b11)(adjCell b21 b20) 			(adjCell b20 b21)(adjCell b01 b00) (adjCell b00 b01)			(adjCell b11 b20) (adjCell b20 b11)(adjCell b10 b00) 			(adjCell b00 b10)(adjCell b10 b20)(adjCell b20 b10))
	(:goal(and (at agent b20)(not(two_cell a11))(not(two_cell b02))
		)
	)
)