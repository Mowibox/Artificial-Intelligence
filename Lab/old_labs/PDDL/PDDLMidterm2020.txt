Party


(define (domain Party) 

  (:requirements
    :strips                 
    :negative-preconditions 
  )

  (:predicates (person ?x) (position ?x) (at ?x ?y) (crossableCell ?x) (adjCell ?x ?y) 
			   (twoPpl ?x) (freeCell ?x)
    
  )

 (:action go
   :parameters (?who ?from ?to)
   :precondition (and
	(person ?who)
	(position ?from)
	(position ?to)
	(at ?who ?from)
	(not(at ?who ?to))
	(crossableCell ?to)
	(adjCell ?from ?to)
   )
   :effect(and
   (not(at ?who ?from))
   (at ?who ?to)
   )
  )
  (:action moveppl
   :parameters(?who ?from ?to)
   :precondition (and
    (person ?who)
	(position ?from)
	(position ?to)
	(twoPpl ?from)
	(adjCell ?to)
	(freeCell ?to)
	(at ?who ?from)
   )
   :effect(and
   (not(freeCell ?to))
   (not(crossableCell ?to))
   (not(crossableCell ?from))
   (not(twoPpl ?from))
   )
  )
 
)

 (define (problem Party)
 (:domain Party)
 (:objects agent a00 a01 a02 a10 a20 a11 a12 a21 a22 b00 b01 b02 b10 b20 b11 b12 b21 b22)
 (:init (person agent) (position a00)(position a01)(position a02)(position a10)(position a20)(position a11)(position a12)(position a21)(position a22)
                       (position b00)(position b01)(position b02)(position b10)(position b20)(position b11)(position b12)(position b21)(position b22)
					   (freeCell a00)(freeCell a01)(freeCell a20)(freeCell a12)(freeCell a21)(freeCell a22)
					   (freeCell b00)(freeCell b02)(freeCell b10)(freeCell b11)(freeCell b12)(freeCell b21)
					   (crossableCell a00)(crossableCell a01)(crossableCell a11)(crossableCell a20)(crossableCell a12)(crossableCell a21)(crossableCell a22)
					   (crossableCell b00)(crossableCell b02)(crossableCell b10)(crossableCell b11)(crossableCell b12)(crossableCell b20)(crossableCell b21)
					   (adjCell a12 a22)(adjCell a22 a12)(adjCell a12 a02)(adjCell a02 a12) (adjCell a12 a11)(adjCell a11 a12)(adjCell a22 a21)(adjCell a21 a22)(adjCell a02 a01)(adjCell a01 a02)(adjCell a11 a21) (adjCell a21 a11) (adjCell a11 a01) (adjCell a01 a11) (adjCell a11 a10) (adjCell a10 a11)(adjCell a21 a20) (adjCell a20 a21)(adjCell a01 a00) (adjCell a00 a01)(adjCell a11 a20) (adjCell a20 a11)(adjCell a10 a00) (adjCell a00 a10)(adjCell a10 a20)(adjCell a20 a10)(adjCell a00 b00) (adjCell b00 a00)
                       (adjCell b12 b22) (adjCell b22 b12) (adjCell b12 b02) (adjCell b02 b12) (adjCell b12 b11) (adjCell b11 b12)(adjCell b22 b21) (adjCell b21 b22)(adjCell b02 b01) (adjCell b01 b02)(adjCell b11 b21) (adjCell b21 b11) (adjCell b11 b01) (adjCell b01 b11) (adjCell b11 b10) (adjCell b10 b11)(adjCell b21 b20) (adjCell b20 b21)(adjCell b01 b00) (adjCell b00 b01)(adjCell b11 b20) (adjCell b20 b11)(adjCell b10 b00) (adjCell b00 b10)(adjCell b10 b20)(adjCell b20 b10)
					   (twoPpl a11)(twoPpl b20)
					   (at agent a12)
 )
 (:goal  (and(at agent b20)(not(twoPpl a11))(not(twoPpl b20)))
  )
  )