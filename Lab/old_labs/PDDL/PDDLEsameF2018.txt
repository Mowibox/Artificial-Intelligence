
(define (domain refri)

	(:requirements
	 :strips
	 :negative-preconditions
	 )
	 
	 (:predicates (robotleft ?x) (robotright ?x) (fridge ?x)(ispoweron ?x)(ismountedon ?x)(iscompr ?x)(changedcompr ?x)(isvitato ?x)
	 )
	 
	(:action turnoff
		 :parameters(?who ?fridge)
		 :precondition(and
		 (robotleft ?who)
		 (fridge ?fridge)
		 (ispoweron ?fridge)
		 )
		 :effect(and
		 (not(ispoweron ?fridge))
		 )
	)
	
	(:action svita
		:parameters(?who ?fridge)
		:precondition(and
		 (robotright ?who)
		 (fridge ?fridge)
		 (ismountedon ?fridge)
		 (iscompr ?fridge)
		 (isvitato ?fridge)
		)
		:effect(and
		 (not(isvitato ?fridge))
		)
	)
	
	(:action avvita
		:parameters(?who ?fridge)
		:precondition(and
		 (robotright ?who)
		 (fridge ?fridge)
		 (ismountedon ?fridge)
		 (iscompr ?fridge)
		 (not(isvitato ?fridge))
		)
		:effect(and
		 (isvitato ?fridge)
		)
	)
	
	(:action unmountbp
		:parameters(?who ?fridge)
		:precondition(and
		 (robotleft ?who)
		 (fridge ?fridge)
		 (ismountedon ?fridge)
		 (iscompr ?fridge)
		 (not(isvitato ?fridge))
		)
		:effect(and
		 (not(ismountedon ?fridge))
		)
	)
	
	(:action mountbp
		:parameters(?who ?fridge)
		:precondition(and
		 (robotleft ?who)
		 (fridge ?fridge)
		 (not(ismountedon ?fridge))
		 (changedcompr ?fridge)
		 (not(isvitato ?fridge))
		)
		:effect(and
		 (ismountedon ?fridge)
		)
	)
	
	(:action unmountcompr
		:parameters(?who ?fridge)
		:precondition(and
		 (robotleft ?who)
		 (fridge ?fridge)
		 (not(ismountedon ?fridge))
		 (not(ispoweron ?fridge))
		 (iscompr ?fridge)
		 (not(changedcompr ?fridge))
		 (not(isvitato ?fridge))
		)
		:effect(and
		 (not(iscompr ?fridge))
		)
	)
	
	(:action mountcompr
		:parameters(?who ?fridge)
		:precondition(and
		 (robotleft ?who)
		 (fridge ?fridge)
		 (not(ismountedon ?fridge))
		 (not(ispoweron ?fridge))
		 (not(iscompr ?fridge))
		 (not(changedcompr ?fridge))
		 (not(isvitato ?fridge))
		)
		:effect(and
		 (iscompr ?fridge)
		 (changedcompr ?fridge)
		)
	)
)	


(define (problem refri)
	(:domain refri)
	(:objects rl rr fridge)
	(:init (robotleft rl)(robotright rr)(fridge fridge)(ispoweron fridge)(ismountedon fridge)(iscompr fridge)(isvitato fridge))
	(:goal(and(not(ispoweron fridge))(ismountedon fridge)(iscompr fridge)(changedcompr fridge)(isvitato fridge)))
)